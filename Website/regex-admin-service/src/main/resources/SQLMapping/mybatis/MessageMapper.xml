<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.regex.admin.dao.web.IMessageDao">
    <!-- MessageDTO的resultMap,column是给数据库列起的别名,它对应property类的属性-->
    <resultMap id="result_MessageDTO_Map" type="com.regex.admin.common.dto.web.MessageDTO">
        <id column="id" property="id" />
        <result column="update_time" property="updateTime" />
        <result column="create_time" property="createTime" />
        <result column="ip" property="ip" />
        <result column="name" property="name" />
        <result column="is_del" property="isDel" />
        <result column="tel" property="tel" />
        <result column="email" property="email" />
        <result column="content" property="content" />
    </resultMap>

	   <!-- Assist用于辅助工具类setRequires设置的条件,${req.require}表示列名,#{req.value}表示值它是防SQL注入的 -->
    <sql id="Assist">
        <where>
            <foreach collection="require" item="req" separator=" ">
                ${req.require} #{req.value} <if test="req.suffix != null"> ${req.suffix}</if>
            </foreach>
        </where>
    </sql>

	   <!-- updateAssist用于更新数据的使用它拓展自Assist,用于辅助工具类setRequires设置的条件,${req.require}表示列名,#{req.value}表示值它是防SQL注入的 -->
    <sql id="updateAssist">
        <where>
            <foreach collection="assist.require" item="req" separator=" ">
                ${req.require} #{req.value} <if test="req.suffix != null"> ${req.suffix}</if>
            </foreach>
        </where>
    </sql>

    <!-- 数据库中表名为:t_message的列名,as前是数据库的列明,as后是列的别名用于映射成实体类中的属性,需要注意的是别名必须与resultMap中的column别名一致 -->
    <sql id="t_message_Column">
        t_message.id as id
        ,t_message.update_time as update_time
        ,t_message.create_time as create_time
        ,t_message.ip as ip
        ,t_message.name as name
        ,t_message.is_del as is_del
        ,t_message.tel as tel
        ,t_message.email as email
        ,t_message.content as content
    </sql>

    <!--获得类名为:MessageDTO对应的数据库表的数据总行数 -->
    <select id="getMessageDTORowCount" parameterType="com.regex.admin.common.util.Assist" resultType="java.lang.Long">
        select count(id) from t_message
        <if test="require!=null"><include refid="Assist" /></if>
    </select>
    <!-- 获得类名为:MessageDTO对应数据库中表的数据集合 -->
    <select id="selectMessageDTO" parameterType="com.regex.admin.common.util.Assist"  resultMap="result_MessageDTO_Map">
        select  <if test="distinct !=null">${distinct}</if>
        <choose>
            <when test="resultColumn!=null">${resultColumn}</when>
            <otherwise>
        <include refid="t_message_Column" /> 
            </otherwise>
        </choose>
        from t_message
        <choose>
            <when test="rowSize ==null">
                <if test="require!=null">
                    <include refid="Assist" />
                </if>
                <if test="order !=null">${order}</if>
            </when>
            <otherwise>
                inner join
                (
                SELECT id as primary_key FROM t_message
                <if test="require!=null">
                    <include refid="Assist" />
                </if>
                <if test="order !=null">${order}</if>
                <choose>
                    <when test="startRow !=null and rowSize !=null">LIMIT #{startRow},#{rowSize} </when>
                    <when test="rowSize !=null">LIMIT #{rowSize}</when>
                 </choose>
                 ) as tmp
                 on tmp.primary_key=t_message.id
            </otherwise>
        </choose>
    </select> 

    <!-- 获得一个MessageDTO对象,以参数MessageDTO对象中不为空的属性作为条件进行查询-->
    <select id="selectMessageDTOByObj" parameterType="com.regex.admin.common.dto.web.MessageDTO" resultMap="result_MessageDTO_Map">
        select 
            <include refid="t_message_Column" /> 
        from t_message
        <where>
            <if test="content != null "> and t_message.content = #{content}</if>
            <if test="email != null "> and t_message.email = #{email}</if>
            <if test="tel != null "> and t_message.tel = #{tel}</if>
            <if test="isDel != null "> and t_message.is_del = #{isDel}</if>
            <if test="name != null "> and t_message.name = #{name}</if>
            <if test="ip != null "> and t_message.ip = #{ip}</if>
            <if test="createTime != null "> and t_message.create_time = #{createTime}</if>
            <if test="updateTime != null "> and t_message.update_time = #{updateTime}</if>
            <if test="id != null "> and t_message.id = #{id}</if>
        </where>
    </select> 

    <!-- 通过MessageDTO的id获得对应数据库中表的数据对象-->
    <select id="selectMessageDTOById" parameterType="java.lang.Long" resultMap="result_MessageDTO_Map">
        select 
            <include refid="t_message_Column" /> 
        from t_message
        where t_message.id = #{id}
    </select> 

    <!-- 将MessageDTO插入到对应数据库的表中,包括属性值为null的数据-->

    <insert id="insertMessageDTO" parameterType="com.regex.admin.common.dto.web.MessageDTO">
        insert into t_message(id,update_time,create_time,ip,name,is_del,tel,email,content) 
        values(#{id},#{updateTime},#{createTime},#{ip},#{name},#{isDel},#{tel},#{email},#{content})
    </insert>

    <!-- 将MessageDTO中属性值不为null的数据,插入到对应数据库的表中-->
    <insert id="insertNonEmptyMessageDTO" parameterType="com.regex.admin.common.dto.web.MessageDTO">
        insert into t_message
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="createTime != null">create_time,</if>
            <if test="ip != null">ip,</if>
            <if test="name != null">name,</if>
            <if test="isDel != null">is_del,</if>
            <if test="tel != null">tel,</if>
            <if test="email != null">email,</if>
            <if test="content != null">content,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null"> #{id},</if>
            <if test="updateTime != null"> #{updateTime},</if>
            <if test="createTime != null"> #{createTime},</if>
            <if test="ip != null"> #{ip},</if>
            <if test="name != null"> #{name},</if>
            <if test="isDel != null"> #{isDel},</if>
            <if test="tel != null"> #{tel},</if>
            <if test="email != null"> #{email},</if>
            <if test="content != null"> #{content},</if>
        </trim>
    </insert>

    <!-- 将MessageDTO批量插入到对应数据库的表中-->
    <insert id="insertMessageDTOByBatch" parameterType="ArrayList">
        insert into t_message(id,update_time,create_time,ip,name,is_del,tel,email,content) values
        <foreach collection="list" item="item" index="index" separator="," >
            (#{item.id},#{item.updateTime},#{item.createTime},#{item.ip},#{item.name},#{item.isDel},#{item.tel},#{item.email},#{item.content})
        </foreach>
    </insert>

    <!-- 通过MessageDTO的id将数据库表中对应的数据删除-->
    <delete id="deleteMessageDTOById" parameterType="java.lang.Long">
        delete from t_message
        where id = #{id}
    </delete>

    <!-- 通过辅助工具Assist中的条件将MessageDTO对应的数据库表的数据删除-->
    <delete id="deleteMessageDTO" parameterType="com.regex.admin.common.util.Assist">
        delete from t_message
        <if test="require!=null"><include refid="Assist" /></if>
    </delete>

    <!-- 通过MessageDTO的id将MessageDTO的数据更新到数据库中对应的表,包括值null的数据-->
    <update id="updateMessageDTOById" parameterType="com.regex.admin.common.dto.web.MessageDTO">
        update t_message set
            update_time=#{updateTime}
            ,create_time=#{createTime}
            ,ip=#{ip}
            ,name=#{name}
            ,is_del=#{isDel}
            ,tel=#{tel}
            ,email=#{email}
            ,content=#{content}
        where id=#{id}
    </update>

    <!-- 通过MessageDTO的id将MessageDTO中属性值不为null的数据更新到数据库对应的表中-->
    <update id="updateNonEmptyMessageDTOById" parameterType="com.regex.admin.common.dto.web.MessageDTO">
        update t_message
        <set>
            <if test="updateTime != null">
                update_time=#{updateTime},
            </if>
            <if test="createTime != null">
                create_time=#{createTime},
            </if>
            <if test="ip != null">
                ip=#{ip},
            </if>
            <if test="name != null">
                name=#{name},
            </if>
            <if test="isDel != null">
                is_del=#{isDel},
            </if>
            <if test="tel != null">
                tel=#{tel},
            </if>
            <if test="email != null">
                email=#{email},
            </if>
            <if test="content != null">
                content=#{content},
            </if>
        </set>
        where id=#{id}
    </update>

    <!-- 通过辅助工具Assist中的条件将MessageDTO中的数据更新到数据库对应的表中,包括值为null的数据-->
    <update id="updateMessageDTO" parameterType="map">
        update t_message
        <set>
                id=#{enti.id},
                update_time=#{enti.updateTime},
                create_time=#{enti.createTime},
                ip=#{enti.ip},
                name=#{enti.name},
                is_del=#{enti.isDel},
                tel=#{enti.tel},
                email=#{enti.email},
                content=#{enti.content},
        </set>
        <if test="assist.require!=null"><include refid="updateAssist" /></if>
    </update>

    <!-- 通过辅助工具Assist中的条件将MessageDTO中属性值不为null的数据更新到数据库对应的表中-->
    <update id="updateNonEmptyMessageDTO" parameterType="map">
        update t_message
        <set>
            <if test="enti.id != null">
                id=#{enti.id},
            </if>
            <if test="enti.updateTime != null">
                update_time=#{enti.updateTime},
            </if>
            <if test="enti.createTime != null">
                create_time=#{enti.createTime},
            </if>
            <if test="enti.ip != null">
                ip=#{enti.ip},
            </if>
            <if test="enti.name != null">
                name=#{enti.name},
            </if>
            <if test="enti.isDel != null">
                is_del=#{enti.isDel},
            </if>
            <if test="enti.tel != null">
                tel=#{enti.tel},
            </if>
            <if test="enti.email != null">
                email=#{enti.email},
            </if>
            <if test="enti.content != null">
                content=#{enti.content},
            </if>
        </set>
        <if test="assist.require!=null"><include refid="updateAssist" /></if>
    </update>

</mapper>