<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.regex.admin.dao.web.IProductDao">
    <!-- ProductDTO的resultMap,column是给数据库列起的别名,它对应property类的属性-->
    <resultMap id="result_ProductDTO_Map" type="com.regex.admin.common.dto.web.ProductDTO">
        <id column="id" property="id" />
        <result column="update_time" property="updateTime" />
        <result column="keywords" property="keywords" />
        <result column="create_time" property="createTime" />
        <result column="name" property="name" />
        <result column="is_del" property="isDel" />
        <result column="description" property="description" />
        <result column="detial" property="detial" />
        <result column="sort" property="sort" />
        <result column="type" property="type" />
        <result column="pic_url" property="picUrl" />
    </resultMap>

	   <!-- Assist用于辅助工具类setRequires设置的条件,${req.require}表示列名,#{req.value}表示值它是防SQL注入的 -->
    <sql id="Assist">
        <where>
            <foreach collection="require" item="req" separator=" ">
                ${req.require} #{req.value} <if test="req.suffix != null"> ${req.suffix}</if>
            </foreach>
        </where>
    </sql>

	   <!-- updateAssist用于更新数据的使用它拓展自Assist,用于辅助工具类setRequires设置的条件,${req.require}表示列名,#{req.value}表示值它是防SQL注入的 -->
    <sql id="updateAssist">
        <where>
            <foreach collection="assist.require" item="req" separator=" ">
                ${req.require} #{req.value} <if test="req.suffix != null"> ${req.suffix}</if>
            </foreach>
        </where>
    </sql>

    <!-- 数据库中表名为:t_product的列名,as前是数据库的列明,as后是列的别名用于映射成实体类中的属性,需要注意的是别名必须与resultMap中的column别名一致 -->
    <sql id="t_product_Column">
        t_product.id as id
        ,t_product.update_time as update_time
        ,t_product.keywords as keywords
        ,t_product.create_time as create_time
        ,t_product.name as name
        ,t_product.is_del as is_del
        ,t_product.description as description
        ,t_product.detial as detial
        ,t_product.sort as sort
        ,t_product.type as type
        ,t_product.pic_url as pic_url
    </sql>

    <!--获得类名为:ProductDTO对应的数据库表的数据总行数 -->
    <select id="getProductDTORowCount" parameterType="com.regex.admin.common.util.Assist" resultType="java.lang.Long">
        select count(id) from t_product
        <if test="require!=null"><include refid="Assist" /></if>
    </select>
    <!-- 获得类名为:ProductDTO对应数据库中表的数据集合 -->
    <select id="selectProductDTO" parameterType="com.regex.admin.common.util.Assist"  resultMap="result_ProductDTO_Map">
        select  <if test="distinct !=null">${distinct}</if>
        <choose>
            <when test="resultColumn!=null">${resultColumn}</when>
            <otherwise>
        <include refid="t_product_Column" /> 
            </otherwise>
        </choose>
        from t_product
        <choose>
            <when test="rowSize ==null">
                <if test="require!=null">
                    <include refid="Assist" />
                </if>
                <if test="order !=null">${order}</if>
            </when>
            <otherwise>
                inner join
                (
                SELECT id as primary_key FROM t_product
                <if test="require!=null">
                    <include refid="Assist" />
                </if>
                <if test="order !=null">${order}</if>
                <choose>
                    <when test="startRow !=null and rowSize !=null">LIMIT #{startRow},#{rowSize} </when>
                    <when test="rowSize !=null">LIMIT #{rowSize}</when>
                 </choose>
                 ) as tmp
                 on tmp.primary_key=t_product.id
            </otherwise>
        </choose>
    </select> 

    <!-- 获得一个ProductDTO对象,以参数ProductDTO对象中不为空的属性作为条件进行查询-->
    <select id="selectProductDTOByObj" parameterType="com.regex.admin.common.dto.web.ProductDTO" resultMap="result_ProductDTO_Map">
        select 
            <include refid="t_product_Column" /> 
        from t_product
        <where>
            <if test="picUrl != null "> and t_product.pic_url = #{picUrl}</if>
            <if test="type != null "> and t_product.type = #{type}</if>
            <if test="sort != null "> and t_product.sort = #{sort}</if>
            <if test="detial != null "> and t_product.detial = #{detial}</if>
            <if test="description != null "> and t_product.description = #{description}</if>
            <if test="isDel != null "> and t_product.is_del = #{isDel}</if>
            <if test="name != null "> and t_product.name = #{name}</if>
            <if test="createTime != null "> and t_product.create_time = #{createTime}</if>
            <if test="keywords != null "> and t_product.keywords = #{keywords}</if>
            <if test="updateTime != null "> and t_product.update_time = #{updateTime}</if>
            <if test="id != null "> and t_product.id = #{id}</if>
        </where>
    </select> 

    <!-- 通过ProductDTO的id获得对应数据库中表的数据对象-->
    <select id="selectProductDTOById" parameterType="java.lang.Long" resultMap="result_ProductDTO_Map">
        select 
            <include refid="t_product_Column" /> 
        from t_product
        where t_product.id = #{id}
    </select> 

    <!-- 将ProductDTO插入到对应数据库的表中,包括属性值为null的数据-->

    <insert id="insertProductDTO" parameterType="com.regex.admin.common.dto.web.ProductDTO">
        insert into t_product(id,update_time,keywords,create_time,name,is_del,description,detial,sort,type,pic_url) 
        values(#{id},#{updateTime},#{keywords},#{createTime},#{name},#{isDel},#{description},#{detial},#{sort},#{type},#{picUrl})
    </insert>

    <!-- 将ProductDTO中属性值不为null的数据,插入到对应数据库的表中-->
    <insert id="insertNonEmptyProductDTO" parameterType="com.regex.admin.common.dto.web.ProductDTO">
        insert into t_product
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="keywords != null">keywords,</if>
            <if test="createTime != null">create_time,</if>
            <if test="name != null">name,</if>
            <if test="isDel != null">is_del,</if>
            <if test="description != null">description,</if>
            <if test="detial != null">detial,</if>
            <if test="sort != null">sort,</if>
            <if test="type != null">type,</if>
            <if test="picUrl != null">pic_url,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null"> #{id},</if>
            <if test="updateTime != null"> #{updateTime},</if>
            <if test="keywords != null"> #{keywords},</if>
            <if test="createTime != null"> #{createTime},</if>
            <if test="name != null"> #{name},</if>
            <if test="isDel != null"> #{isDel},</if>
            <if test="description != null"> #{description},</if>
            <if test="detial != null"> #{detial},</if>
            <if test="sort != null"> #{sort},</if>
            <if test="type != null"> #{type},</if>
            <if test="picUrl != null"> #{picUrl},</if>
        </trim>
    </insert>

    <!-- 将ProductDTO批量插入到对应数据库的表中-->
    <insert id="insertProductDTOByBatch" parameterType="ArrayList">
        insert into t_product(id,update_time,keywords,create_time,name,is_del,description,detial,sort,type,pic_url) values
        <foreach collection="list" item="item" index="index" separator="," >
            (#{item.id},#{item.updateTime},#{item.keywords},#{item.createTime},#{item.name},#{item.isDel},#{item.description},#{item.detial},#{item.sort},#{item.type},#{item.picUrl})
        </foreach>
    </insert>

    <!-- 通过ProductDTO的id将数据库表中对应的数据删除-->
    <delete id="deleteProductDTOById" parameterType="java.lang.Long">
        delete from t_product
        where id = #{id}
    </delete>

    <!-- 通过辅助工具Assist中的条件将ProductDTO对应的数据库表的数据删除-->
    <delete id="deleteProductDTO" parameterType="com.regex.admin.common.util.Assist">
        delete from t_product
        <if test="require!=null"><include refid="Assist" /></if>
    </delete>

    <!-- 通过ProductDTO的id将ProductDTO的数据更新到数据库中对应的表,包括值null的数据-->
    <update id="updateProductDTOById" parameterType="com.regex.admin.common.dto.web.ProductDTO">
        update t_product set
            update_time=#{updateTime}
            ,keywords=#{keywords}
            ,create_time=#{createTime}
            ,name=#{name}
            ,is_del=#{isDel}
            ,description=#{description}
            ,detial=#{detial}
            ,sort=#{sort}
            ,type=#{type}
            ,pic_url=#{picUrl}
        where id=#{id}
    </update>

    <!-- 通过ProductDTO的id将ProductDTO中属性值不为null的数据更新到数据库对应的表中-->
    <update id="updateNonEmptyProductDTOById" parameterType="com.regex.admin.common.dto.web.ProductDTO">
        update t_product
        <set>
            <if test="updateTime != null">
                update_time=#{updateTime},
            </if>
            <if test="keywords != null">
                keywords=#{keywords},
            </if>
            <if test="createTime != null">
                create_time=#{createTime},
            </if>
            <if test="name != null">
                name=#{name},
            </if>
            <if test="isDel != null">
                is_del=#{isDel},
            </if>
            <if test="description != null">
                description=#{description},
            </if>
            <if test="detial != null">
                detial=#{detial},
            </if>
            <if test="sort != null">
                sort=#{sort},
            </if>
            <if test="type != null">
                type=#{type},
            </if>
            <if test="picUrl != null">
                pic_url=#{picUrl},
            </if>
        </set>
        where id=#{id}
    </update>

    <!-- 通过辅助工具Assist中的条件将ProductDTO中的数据更新到数据库对应的表中,包括值为null的数据-->
    <update id="updateProductDTO" parameterType="map">
        update t_product
        <set>
                id=#{enti.id},
                update_time=#{enti.updateTime},
                keywords=#{enti.keywords},
                create_time=#{enti.createTime},
                name=#{enti.name},
                is_del=#{enti.isDel},
                description=#{enti.description},
                detial=#{enti.detial},
                sort=#{enti.sort},
                type=#{enti.type},
                pic_url=#{enti.picUrl},
        </set>
        <if test="assist.require!=null"><include refid="updateAssist" /></if>
    </update>

    <!-- 通过辅助工具Assist中的条件将ProductDTO中属性值不为null的数据更新到数据库对应的表中-->
    <update id="updateNonEmptyProductDTO" parameterType="map">
        update t_product
        <set>
            <if test="enti.id != null">
                id=#{enti.id},
            </if>
            <if test="enti.updateTime != null">
                update_time=#{enti.updateTime},
            </if>
            <if test="enti.keywords != null">
                keywords=#{enti.keywords},
            </if>
            <if test="enti.createTime != null">
                create_time=#{enti.createTime},
            </if>
            <if test="enti.name != null">
                name=#{enti.name},
            </if>
            <if test="enti.isDel != null">
                is_del=#{enti.isDel},
            </if>
            <if test="enti.description != null">
                description=#{enti.description},
            </if>
            <if test="enti.detial != null">
                detial=#{enti.detial},
            </if>
            <if test="enti.sort != null">
                sort=#{enti.sort},
            </if>
            <if test="enti.type != null">
                type=#{enti.type},
            </if>
            <if test="enti.picUrl != null">
                pic_url=#{enti.picUrl},
            </if>
        </set>
        <if test="assist.require!=null"><include refid="updateAssist" /></if>
    </update>

</mapper>