<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.regex.admin.dao.web.IRecruitDao">
    <!-- RecruitDTO的resultMap,column是给数据库列起的别名,它对应property类的属性-->
    <resultMap id="result_RecruitDTO_Map" type="com.regex.admin.common.dto.web.RecruitDTO">
        <id column="id" property="id" />
        <result column="job_address" property="jobAddress" />
        <result column="job_demand" property="jobDemand" />
        <result column="update_time" property="updateTime" />
        <result column="job_name" property="jobName" />
        <result column="create_time" property="createTime" />
        <result column="publish_time" property="publishTime" />
        <result column="is_del" property="isDel" />
        <result column="detial" property="detial" />
    </resultMap>

	   <!-- Assist用于辅助工具类setRequires设置的条件,${req.require}表示列名,#{req.value}表示值它是防SQL注入的 -->
    <sql id="Assist">
        <where>
            <foreach collection="require" item="req" separator=" ">
                ${req.require} #{req.value} <if test="req.suffix != null"> ${req.suffix}</if>
            </foreach>
        </where>
    </sql>

	   <!-- updateAssist用于更新数据的使用它拓展自Assist,用于辅助工具类setRequires设置的条件,${req.require}表示列名,#{req.value}表示值它是防SQL注入的 -->
    <sql id="updateAssist">
        <where>
            <foreach collection="assist.require" item="req" separator=" ">
                ${req.require} #{req.value} <if test="req.suffix != null"> ${req.suffix}</if>
            </foreach>
        </where>
    </sql>

    <!-- 数据库中表名为:t_recruit的列名,as前是数据库的列明,as后是列的别名用于映射成实体类中的属性,需要注意的是别名必须与resultMap中的column别名一致 -->
    <sql id="t_recruit_Column">
        t_recruit.id as id
        ,t_recruit.job_address as job_address
        ,t_recruit.job_demand as job_demand
        ,t_recruit.update_time as update_time
        ,t_recruit.job_name as job_name
        ,t_recruit.create_time as create_time
        ,t_recruit.publish_time as publish_time
        ,t_recruit.is_del as is_del
        ,t_recruit.detial as detial
    </sql>

    <!--获得类名为:RecruitDTO对应的数据库表的数据总行数 -->
    <select id="getRecruitDTORowCount" parameterType="com.regex.admin.common.util.Assist" resultType="java.lang.Long">
        select count(id) from t_recruit
        <if test="require!=null"><include refid="Assist" /></if>
    </select>
    <!-- 获得类名为:RecruitDTO对应数据库中表的数据集合 -->
    <select id="selectRecruitDTO" parameterType="com.regex.admin.common.util.Assist"  resultMap="result_RecruitDTO_Map">
        select  <if test="distinct !=null">${distinct}</if>
        <choose>
            <when test="resultColumn!=null">${resultColumn}</when>
            <otherwise>
        <include refid="t_recruit_Column" /> 
            </otherwise>
        </choose>
        from t_recruit
        <choose>
            <when test="rowSize ==null">
                <if test="require!=null">
                    <include refid="Assist" />
                </if>
                <if test="order !=null">${order}</if>
            </when>
            <otherwise>
                inner join
                (
                SELECT id as primary_key FROM t_recruit
                <if test="require!=null">
                    <include refid="Assist" />
                </if>
                <if test="order !=null">${order}</if>
                <choose>
                    <when test="startRow !=null and rowSize !=null">LIMIT #{startRow},#{rowSize} </when>
                    <when test="rowSize !=null">LIMIT #{rowSize}</when>
                 </choose>
                 ) as tmp
                 on tmp.primary_key=t_recruit.id
            </otherwise>
        </choose>
    </select> 

    <!-- 获得一个RecruitDTO对象,以参数RecruitDTO对象中不为空的属性作为条件进行查询-->
    <select id="selectRecruitDTOByObj" parameterType="com.regex.admin.common.dto.web.RecruitDTO" resultMap="result_RecruitDTO_Map">
        select 
            <include refid="t_recruit_Column" /> 
        from t_recruit
        <where>
            <if test="detial != null "> and t_recruit.detial = #{detial}</if>
            <if test="isDel != null "> and t_recruit.is_del = #{isDel}</if>
            <if test="publishTime != null "> and t_recruit.publish_time = #{publishTime}</if>
            <if test="createTime != null "> and t_recruit.create_time = #{createTime}</if>
            <if test="jobName != null "> and t_recruit.job_name = #{jobName}</if>
            <if test="updateTime != null "> and t_recruit.update_time = #{updateTime}</if>
            <if test="jobDemand != null "> and t_recruit.job_demand = #{jobDemand}</if>
            <if test="jobAddress != null "> and t_recruit.job_address = #{jobAddress}</if>
            <if test="id != null "> and t_recruit.id = #{id}</if>
        </where>
    </select> 

    <!-- 通过RecruitDTO的id获得对应数据库中表的数据对象-->
    <select id="selectRecruitDTOById" parameterType="java.lang.Long" resultMap="result_RecruitDTO_Map">
        select 
            <include refid="t_recruit_Column" /> 
        from t_recruit
        where t_recruit.id = #{id}
    </select> 

    <!-- 将RecruitDTO插入到对应数据库的表中,包括属性值为null的数据-->

    <insert id="insertRecruitDTO" parameterType="com.regex.admin.common.dto.web.RecruitDTO">
        insert into t_recruit(id,job_address,job_demand,update_time,job_name,create_time,publish_time,is_del,detial) 
        values(#{id},#{jobAddress},#{jobDemand},#{updateTime},#{jobName},#{createTime},#{publishTime},#{isDel},#{detial})
    </insert>

    <!-- 将RecruitDTO中属性值不为null的数据,插入到对应数据库的表中-->
    <insert id="insertNonEmptyRecruitDTO" parameterType="com.regex.admin.common.dto.web.RecruitDTO">
        insert into t_recruit
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>
            <if test="jobAddress != null">job_address,</if>
            <if test="jobDemand != null">job_demand,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="jobName != null">job_name,</if>
            <if test="createTime != null">create_time,</if>
            <if test="publishTime != null">publish_time,</if>
            <if test="isDel != null">is_del,</if>
            <if test="detial != null">detial,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null"> #{id},</if>
            <if test="jobAddress != null"> #{jobAddress},</if>
            <if test="jobDemand != null"> #{jobDemand},</if>
            <if test="updateTime != null"> #{updateTime},</if>
            <if test="jobName != null"> #{jobName},</if>
            <if test="createTime != null"> #{createTime},</if>
            <if test="publishTime != null"> #{publishTime},</if>
            <if test="isDel != null"> #{isDel},</if>
            <if test="detial != null"> #{detial},</if>
        </trim>
    </insert>

    <!-- 将RecruitDTO批量插入到对应数据库的表中-->
    <insert id="insertRecruitDTOByBatch" parameterType="ArrayList">
        insert into t_recruit(id,job_address,job_demand,update_time,job_name,create_time,publish_time,is_del,detial) values
        <foreach collection="list" item="item" index="index" separator="," >
            (#{item.id},#{item.jobAddress},#{item.jobDemand},#{item.updateTime},#{item.jobName},#{item.createTime},#{item.publishTime},#{item.isDel},#{item.detial})
        </foreach>
    </insert>

    <!-- 通过RecruitDTO的id将数据库表中对应的数据删除-->
    <delete id="deleteRecruitDTOById" parameterType="java.lang.Long">
        delete from t_recruit
        where id = #{id}
    </delete>

    <!-- 通过辅助工具Assist中的条件将RecruitDTO对应的数据库表的数据删除-->
    <delete id="deleteRecruitDTO" parameterType="com.regex.admin.common.util.Assist">
        delete from t_recruit
        <if test="require!=null"><include refid="Assist" /></if>
    </delete>

    <!-- 通过RecruitDTO的id将RecruitDTO的数据更新到数据库中对应的表,包括值null的数据-->
    <update id="updateRecruitDTOById" parameterType="com.regex.admin.common.dto.web.RecruitDTO">
        update t_recruit set
            job_address=#{jobAddress}
            ,job_demand=#{jobDemand}
            ,update_time=#{updateTime}
            ,job_name=#{jobName}
            ,create_time=#{createTime}
            ,publish_time=#{publishTime}
            ,is_del=#{isDel}
            ,detial=#{detial}
        where id=#{id}
    </update>

    <!-- 通过RecruitDTO的id将RecruitDTO中属性值不为null的数据更新到数据库对应的表中-->
    <update id="updateNonEmptyRecruitDTOById" parameterType="com.regex.admin.common.dto.web.RecruitDTO">
        update t_recruit
        <set>
            <if test="jobAddress != null">
                job_address=#{jobAddress},
            </if>
            <if test="jobDemand != null">
                job_demand=#{jobDemand},
            </if>
            <if test="updateTime != null">
                update_time=#{updateTime},
            </if>
            <if test="jobName != null">
                job_name=#{jobName},
            </if>
            <if test="createTime != null">
                create_time=#{createTime},
            </if>
            <if test="publishTime != null">
                publish_time=#{publishTime},
            </if>
            <if test="isDel != null">
                is_del=#{isDel},
            </if>
            <if test="detial != null">
                detial=#{detial},
            </if>
        </set>
        where id=#{id}
    </update>

    <!-- 通过辅助工具Assist中的条件将RecruitDTO中的数据更新到数据库对应的表中,包括值为null的数据-->
    <update id="updateRecruitDTO" parameterType="map">
        update t_recruit
        <set>
                id=#{enti.id},
                job_address=#{enti.jobAddress},
                job_demand=#{enti.jobDemand},
                update_time=#{enti.updateTime},
                job_name=#{enti.jobName},
                create_time=#{enti.createTime},
                publish_time=#{enti.publishTime},
                is_del=#{enti.isDel},
                detial=#{enti.detial},
        </set>
        <if test="assist.require!=null"><include refid="updateAssist" /></if>
    </update>

    <!-- 通过辅助工具Assist中的条件将RecruitDTO中属性值不为null的数据更新到数据库对应的表中-->
    <update id="updateNonEmptyRecruitDTO" parameterType="map">
        update t_recruit
        <set>
            <if test="enti.id != null">
                id=#{enti.id},
            </if>
            <if test="enti.jobAddress != null">
                job_address=#{enti.jobAddress},
            </if>
            <if test="enti.jobDemand != null">
                job_demand=#{enti.jobDemand},
            </if>
            <if test="enti.updateTime != null">
                update_time=#{enti.updateTime},
            </if>
            <if test="enti.jobName != null">
                job_name=#{enti.jobName},
            </if>
            <if test="enti.createTime != null">
                create_time=#{enti.createTime},
            </if>
            <if test="enti.publishTime != null">
                publish_time=#{enti.publishTime},
            </if>
            <if test="enti.isDel != null">
                is_del=#{enti.isDel},
            </if>
            <if test="enti.detial != null">
                detial=#{enti.detial},
            </if>
        </set>
        <if test="assist.require!=null"><include refid="updateAssist" /></if>
    </update>

</mapper>